type Query {
    users: [User]
    userWithId(id: ID!): User
    currentUser: User
    posts: [Post]
    postWithId(id: ID!): Post
    postsWithUserId(userId: ID!): [Post]
    comments: [Comment]
    commentsWithPostId(postId: ID!): [Comment]
    postLikes(postId: ID!): [PostLike]
    commentLikes(commentId: ID!): [CommentLike]
    follower: [UserSummary]
    following: [UserSummary]
}

type User {
    id: ID!
    name: String!
    userName: String!
    bio: String
    posts: [Post]
    comments: [Comment]
    postLikes: [PostLike]
    commentLikes: [CommentLike]
}

type UserSummary {
    id: ID
    name: String
    userName: String
    bio: String
}

type Post {
    id: ID!
    content: String!
    user: UserSummary!
    comments: [Comment!]!
    createdAt: String!
    totalLikes: Int
}

type PostSummary {
    id: ID!
    content: String!
    user: UserSummary!
    createdAt: String!
    totalLikes: Int
}

type PostLike {
    id: ID!
    user: UserSummary
    post: PostSummary
}

type Comment {
    id: ID!
    content: String!
    user: UserSummary!
    post: PostSummary!
    createdAt: String!
    totalLikes: Int
}

type CommentLike {
    id: ID!
    user: UserSummary
    comment: Comment
}
